{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/email.ts","webpack:///./src/app/Models/login.ts","webpack:///./src/app/Models/post.ts","webpack:///./src/app/Models/user.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authorization/authorization.component.css","webpack:///./src/app/authorization/authorization.component.html","webpack:///./src/app/authorization/authorization.component.ts","webpack:///./src/app/interceptor/interceptor.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/services/feedback.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/app/services/translate.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/translate.pipe.ts","webpack:///./src/app/ui/about-user-body/about-user-body.component.css","webpack:///./src/app/ui/about-user-body/about-user-body.component.html","webpack:///./src/app/ui/about-user-body/about-user-body.component.ts","webpack:///./src/app/ui/footer/footer.component.css","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/login-registration-header/login-registration-header.component.css","webpack:///./src/app/ui/login-registration-header/login-registration-header.component.html","webpack:///./src/app/ui/login-registration-header/login-registration-header.component.ts","webpack:///./src/app/ui/navigation-tools/navigation-tools.component.css","webpack:///./src/app/ui/navigation-tools/navigation-tools.component.html","webpack:///./src/app/ui/navigation-tools/navigation-tools.component.ts","webpack:///./src/app/ui/post/post.component.css","webpack:///./src/app/ui/post/post.component.html","webpack:///./src/app/ui/post/post.component.ts","webpack:///./src/app/userpage/userpage.component.css","webpack:///./src/app/userpage/userpage.component.html","webpack:///./src/app/userpage/userpage.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Email {\r\n    constructor(\r\n        public userEmail: string,\r\n        public feedback: string       \r\n    ){}\r\n}\r\n","export class Login {\r\n    public login: string;\r\n    public password: string; \r\n}\r\n","export class Post {\r\n    public id: number;\r\n    public message: string;\r\n    public id_user: number;\r\n    public post_date: Date;\r\n    public username: string;\r\n}\r\n","export class User {\r\n    public id: number;\r\n    public login: string;\r\n    public password: string;\r\n    public bio: string;\r\n    public mail: string;\r\n    public active: boolean;\r\n    public avatar?: Blob;\r\n    public register_code:string;\r\n}\r\n","import { NgModule }  from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutUserBodyComponent } from './ui/about-user-body/about-user-body.component';\r\nimport { PostComponent } from './ui/post/post.component';\r\nimport { NavigationToolsComponent } from './ui/navigation-tools/navigation-tools.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport { AuthorisationComponent } from './authorization/authorization.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'login',\r\n    component:AuthorisationComponent,\r\n    },\r\n    {\r\n      path: '',\r\n      redirectTo: 'login',\r\n      pathMatch: 'full',\r\n      },\r\n    {\r\n      path:'registration',\r\n      component:RegistrationComponent\r\n    },\r\n    \r\n    {\r\n    path: 'menu',\r\n    component: NavigationToolsComponent,\r\n    children: [\r\n      {\r\n        path: 'post',\r\n        component: PostComponent,\r\n      },\r\n      {\r\n        path: 'interesting',\r\n        component: AboutUserBodyComponent,\r\n      },\r\n      {\r\n        path: '**',\r\n        component: PostComponent,\r\n      },\r\n      {\r\n        path:'auth',\r\n        redirectTo: './login',\r\n    pathMatch: 'full',\r\n      }\r\n\r\n    ]\r\n    },\r\n    {\r\n    path: '**',\r\n    redirectTo: ''\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\n\r\nexport class AppRoutingModule {}","module.exports = \".wrapper{\\r\\n    display: flex; \\r\\n}\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n    <div style=\\\"width: 150vh\\\"></div>\\r\\n    <router-outlet></router-outlet>\\r\\n    <div style=\\\"width: 150vh\\\"></div>\\r\\n</div>\\r\\n<!-- <app-footer></app-footer> -->\\r\\n\"","import { Component } from '@angular/core';\r\nimport { TranslateService } from './services/translate.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  constructor(private translate: TranslateService) {\r\n    translate.use('en');\r\n  }\r\n  title = 'ISD team! yep yep :)';\r\n}\r\n","//angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n//primeng\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { MenuModule, DialogModule } from 'primeng/primeng';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { DataViewModule } from 'primeng/dataview';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\n\r\n//project\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginRegistrationHeaderComponent } from './ui/login-registration-header/login-registration-header.component';\r\nimport { AboutUserBodyComponent } from './ui/about-user-body/about-user-body.component';\r\nimport { FooterComponent } from './ui/footer/footer.component';\r\nimport { PostComponent } from './ui/post/post.component';\r\nimport { NavigationToolsComponent } from './ui/navigation-tools/navigation-tools.component';\r\nimport { TranslatePipe } from './translate.pipe';\r\nimport { TranslateService } from './services/translate.service';\r\nimport { AuthorisationComponent } from './authorization/authorization.component';\r\nimport { UserService} from './services/user.service';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { Interceptor} from './interceptor/interceptor';\r\nimport { UserpageComponent } from './userpage/userpage.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginRegistrationHeaderComponent,\r\n    AboutUserBodyComponent,\r\n    FooterComponent,\r\n    PostComponent,\r\n    NavigationToolsComponent,\r\n    TranslatePipe,\r\n    UserpageComponent,\r\n    AuthorisationComponent,\r\n    RegistrationComponent,\r\n  ],\r\n  imports: [LoggerModule.forRoot({\r\n    level: NgxLoggerLevel.DEBUG}),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    ButtonModule,\r\n    AccordionModule,\r\n    SidebarModule,\r\n    HttpClientModule,\r\n    MenubarModule,\r\n    MenuModule,\r\n    DataViewModule,\r\n    DialogModule,\r\n    InputTextareaModule,\r\n    FileUploadModule    \r\n  ],\r\n  exports: [\r\n    LoginRegistrationHeaderComponent,\r\n    AboutUserBodyComponent,\r\n    FooterComponent,\r\n    NavigationToolsComponent,\r\n    PostComponent,\r\n    AccordionModule,\r\n    DataViewModule,\r\n    UserpageComponent\r\n  ],\r\n  providers: [UserService, CookieService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: Interceptor,\r\n      multi: true\r\n    },\r\n    TranslateService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: setupTranslateFactory,\r\n      deps: [ TranslateService ],\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function setupTranslateFactory(service: TranslateService): Function {\r\n  return () => service.use('en');\r\n}","module.exports = \"body{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }\\r\\n  \\r\\n  .labelSignup{\\r\\n      font-family: fantasy\\r\\n  }\\r\\n  \\r\\n  input{\\r\\n      padding: 5px;\\r\\n      /* border-radius: 5px; \\r\\n      border-color: rgb(255, 222, 73); */\\r\\n      width: 200px;\\r\\n  }\\r\\n  \\r\\n  .button1\\r\\n  {\\r\\n      font-weight: 700;\\r\\n    color: rgb(10, 3, 3);\\r\\n    text-decoration: none;\\r\\n    justify-content: center;\\r\\n    padding: .4em 1em calc(.8em + 3px);\\r\\n    background: rgb(255, 222, 73);\\r\\n    width: 120px;\\r\\n    height: 35px;\\r\\n    box-shadow: 0 -3px rgb(185, 177, 53) inset;\\r\\n    transition: 0.2s;\\r\\n  }\\r\\n  \\r\\n  .button2\\r\\n  {\\r\\n      font-weight: 700;\\r\\n    color: rgb(10, 3, 3);\\r\\n    text-decoration: none;\\r\\n    justify-content: center;\\r\\n    padding: .4em 1em calc(.8em + 3px);\\r\\n    background: rgb(255, 222, 73);\\r\\n    width: 150px;\\r\\n    height: 35px;\\r\\n    box-shadow: 0 -3px rgb(185, 177, 53) inset;\\r\\n    transition: 0.2s;\\r\\n  }\\r\\n  \\r\\n  .post-username{\\r\\n      outline: none; \\r\\n      color: white;\\r\\n      background-color: rgb(46, 45, 45);\\r\\n      /* border-radius: 40px;  */\\r\\n      border-color: rgb(255, 222, 73);\\r\\n      border-width: 1px;\\r\\n      border-top: none;\\r\\n      border-right: none;\\r\\n      border-left: none;\\r\\n      margin-left: 0px;\\r\\n      margin-top: 20px \\r\\n  }\\r\\n  \\r\\n  p{\\r\\n      padding: 0px;\\r\\n      margin: 0px;\\r\\n  }\\r\\n  \\r\\n  .regButton{\\r\\n      color: rgb(10, 3, 3);\\r\\n      background: rgb(255, 222, 73);\\r\\n      border-color: black;\\r\\n      outline: none; \\r\\n      border-radius: 40px; \\r\\n      /* margin-left: 0px; */\\r\\n      margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .post-email{\\r\\n      outline: none; \\r\\n      border-radius: 40px; \\r\\n      margin: 0 20px; \\r\\n      margin-left: 10px;\\r\\n  }\\r\\n  \\r\\n  .code{\\r\\n      outline: none; \\r\\n      border-radius: 40px; \\r\\n      margin: 0 20px; \\r\\n      margin-left: -10px;\\r\\n  }\\r\\n  \\r\\n  .post-pass{\\r\\n      outline: none; \\r\\n      border-radius: 40px; \\r\\n      margin: 0 20px; \\r\\n      margin-left: -10px;\\r\\n  }\\r\\n  \\r\\n  .post-reppas{\\r\\n      outline: none; \\r\\n      border-radius: 40px; \\r\\n      margin: 0 20px; \\r\\n      margin-left: -10px;\\r\\n  }\\r\\n  \\r\\n  .outer{\\r\\n      display: block;\\r\\n  }\\r\\n  \\r\\n  .inner{\\r\\n      display: block;\\r\\n      margin-left: auto;\\r\\n      margin-right: auto;\\r\\n      margin-top: 5%;\\r\\n      margin-bottom: auto;\\r\\n  }\\r\\n  \\r\\n  .container_with_borders{\\r\\n      border: 3 px;\\r\\n      border-color: rgb(46, 45, 45);\\r\\n      border-style: solid;  \\r\\n      border-radius: 20px;    \\r\\n      width: 300px;\\r\\n      position: relative;\\r\\n      display: flex;\\r\\n      justify-content: center;\\r\\n      background-color: rgb(46, 45, 45);\\r\\n      margin-bottom:10px; \\r\\n     /* background-image: url(assets/images/nebo.jpg);*/\\r\\n     box-shadow:  6px 3px 33px 0px rgba(0,0,0,0.31);\\r\\n  }\\r\\n  \\r\\n  .ui-inputgroup{\\r\\n      display: block;\\r\\n      position: relative;\\r\\n      \\r\\n     \\r\\n  }\\r\\n  \\r\\n  .buttonCBContainer{\\r\\n      display: block;\\r\\n      left: 50%\\r\\n    }\\r\\n  \\r\\n   \\r\\n      \"","module.exports = \"<div class=\\\"outer\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n      <img src=\\\"assets/images/Logo-Sayme.svg\\\" style=\\\"width:280px; display: block; margin-left: auto;margin-right: auto\\\">\\r\\n  </div>\\r\\n  <div class=\\\"inner\\\">\\r\\n      <div class=\\\"container_with_borders\\\">\\r\\n          <form #postForm=\\\"ngForm\\\" (keydown.enter)=\\\"onRegister()\\\">\\r\\n              <div class=\\\"ui-g ui-fluid\\\" style=\\\"justify-content: center\\\">\\r\\n                  \\r\\n                  <div  style=\\\"padding: 0px;\\\" class=\\\"ui-g-12\\\">\\r\\n                      <input [(ngModel)]=\\\"user.login\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"text\\\" pInputText placeholder=\\\"Username\\\" autocomplete=\\\"off\\\">\\r\\n                      <br>\\r\\n                      <input [(ngModel)]=\\\"user.password\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"password\\\" pInputText placeholder=\\\"Password\\\"\\r\\n                          autocomplete=\\\"off\\\">\\r\\n                      <br>\\r\\n                              <button class=\\\"regButton\\\"  style=\\\"padding:4%;vertical-align:middle; margin-top: 20px; width: 120px;height: 40px; border-radius: 30px;margin-left: 45px;\\\"\\r\\n                              pButton (click)=\\\"onLogin()\\\">Sign in</button>\\r\\n                              <br>\\r\\n\\r\\n                               <button class=\\\"regButton\\\"  style=\\\"padding:4%;vertical-align:middle; width: 120px;height: 40px; border-radius: 30px;margin-left: 45px;\\\"\\r\\n                              pButton (click)=\\\"onRegistration()\\\">Sign up</button> \\r\\n                      \\r\\n                              \\r\\n                  </div>\\r\\n                  \\r\\n              </div>\\r\\n          </form>\\r\\n      </div>\\r\\n      <p style=' font-family:Roboto, sans-serif;text-align: center; text-decoration: underline ;text-decoration-color: red ;color:black'>{{errorMessage}}</p>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"outer\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <img src=\\\"assets/images/Logo-Sayme.svg\\\" style=\\\"width:280px; display: block; margin-left: auto;margin-right: auto\\\">\\r\\n  </div>\\r\\n  <div class=\\\"inner\\\">\\r\\n    <div class=\\\"container_with_borders\\\">\\r\\n      <form #postForm=\\\"ngForm\\\" (keydown.enter)=\\\"onLogin()\\\">\\r\\n        <div class=\\\"ui-g ui-fluid\\\" style=\\\"justify-content: center\\\">\\r\\n          <div style=\\\"padding: 10px;\\\" class=\\\"ui-g-12\\\">\\r\\n            <input [(ngModel)]=\\\"user.login\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"text\\\" pInputText placeholder=\\\"Username\\\" autocomplete=\\\"off\\\">\\r\\n            <br>\\r\\n            <input [(ngModel)]=\\\"user.password\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"password\\\" pInputText placeholder=\\\"Password\\\"\\r\\n              autocomplete=\\\"off\\\">\\r\\n            <br>\\r\\n\\r\\n            <button class=\\\"regButton\\\" style=\\\"padding:4%;vertical-align:middle; margin-top: 20px; width: 120px;height: 40px; border-radius: 30px;margin-left: 45px;\\\"\\r\\n              pButton (click)=\\\"onLogin()\\\">Sign in</button>\\r\\n            <button class=\\\"regButton\\\" style=\\\"padding:4%;vertical-align:middle; margin-top: 20px; width: 120px;height: 40px; border-radius: 30px;margin-left: 45px;\\\"\\r\\n              pButton (click)=\\\"onRegistration()\\\">Sign up</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <p style=' font-family:Roboto, sans-serif;text-align: center; text-decoration: underline ;text-decoration-color: red ;color:black'>{{errorMessage}}</p>\\r\\n  </div> -->\\r\\n\\r\\n\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport {LoginService} from'../services/login.service';\r\nimport { timer } from '../../../node_modules/rxjs/internal/observable/timer';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Login } from '../Models/login';\r\nimport { UserService } from '../services/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-authorization',\r\n  templateUrl: './authorization.component.html',\r\n  styleUrls: ['./authorization.component.css'],\r\n  providers: [ LoginService]\r\n})\r\nexport class AuthorisationComponent implements OnInit {\r\n\r\n  private url = '/api/user/authenticate';\r\n\r\n  private usersToSearch = [];\r\n  private user=new Login();\r\n  private timeIt = timer(1, 10000);\r\n  private errorMessage='';\r\n\r\n  model: any = {};\r\n    loading = false;\r\n    returnUrl: string;\r\n    error = '';\r\n\r\n  constructor(private loginService: LoginService,  private router: Router, private cookieService: CookieService, private userserv: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  onLogin()\r\n  {\r\n    console.log('sdfsdf');\r\n    this.loginService.postLogin();\r\n    console.log('sdfsdf');\r\n    // if(this.user.login&&this.user.password)\r\n    // {\r\n    //   this.loginService.postLoginUser(this.user)\r\n    //   .subscribe((data:Login)=>this.usersToSearch.push(data));\r\n      \r\n    // }\r\n    // else{\r\n    //   this.errorMessage='Wrong input!';\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  onRegistration(){\r\n    this.userserv.getUsers().subscribe();\r\n    //this.router.navigate(['/registration']);\r\n  }\r\n\r\n \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { tap } from '../../../node_modules/rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n\r\n    constructor(private router:Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = req.clone({\r\n            setHeaders: {\r\n              Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE1MzU1NzYzMzMsImV4cCI6MTUzNjE4MTEzMywiaWF0IjoxNTM1NTc2MzMzfQ.8RKSatsDQYRkv4UsDAsfpRjewi_Vgb4nmW0w-elnf8g`\r\n            }\r\n          });\r\n          \r\n        return next.handle(req).pipe(tap(\r\n            (event:any)=>{},\r\n            (error:any)=>{\r\n                if(error instanceof HttpErrorResponse)\r\n                {\r\n                    if(error.status==401)\r\n                    this.router.navigate(['/login']);\r\n                }\r\n            }\r\n        ))\r\n        ;\r\n\r\n    }\r\n}","module.exports = \"body{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    padding: 5px;\\r\\n    /* border-radius: 5px; \\r\\n    border-color: rgb(255, 222, 73); */\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\np{\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n/* only dashes '-' (not underscores '_') are allowed in css selector`s names */\\r\\n\\r\\n/* just lowercase symbols are allowed in selector`s names */\\r\\n\\r\\n.labelSignup{\\r\\n    font-family: fantasy;\\r\\n}\\r\\n\\r\\n/* fix name (use real logic name instead of abstract)*/\\r\\n\\r\\n.button1{\\r\\n    font-weight: 700;\\r\\n    color: rgb(10, 3, 3);\\r\\n    text-decoration: none;\\r\\n    justify-content: center;\\r\\n    padding: .4em 1em calc(.8em + 3px);\\r\\n    background: rgb(255, 222, 73);\\r\\n    width: 120px;\\r\\n    height: 35px;\\r\\n    box-shadow: 0 -3px rgb(185, 177, 53) inset;\\r\\n    transition: 0.2s;\\r\\n}\\r\\n\\r\\n/* fix name */\\r\\n\\r\\n.button2{\\r\\n    font-weight: 700;\\r\\n    color: rgb(10, 3, 3);\\r\\n    text-decoration: none;\\r\\n    justify-content: center;\\r\\n    padding: .4em 1em calc(.8em + 3px);\\r\\n    background: rgb(255, 222, 73);\\r\\n    width: 150px;\\r\\n    height: 35px;\\r\\n    box-shadow: 0 -3px rgb(185, 177, 53) inset;\\r\\n    transition: 0.2s;\\r\\n}\\r\\n\\r\\n.post-username{\\r\\n    outline: none; \\r\\n    color: white;\\r\\n    background-color: rgb(46, 45, 45);\\r\\n    /* border-radius: 40px;  */\\r\\n    border-color: rgb(255, 222, 73);\\r\\n    border-width: 1px;\\r\\n    border-top: none;\\r\\n    border-right: none;\\r\\n    border-left: none;\\r\\n    margin-left: 0px;\\r\\n    margin-top: 20px \\r\\n}\\r\\n\\r\\n/* fix selector`s name with dash separator */\\r\\n\\r\\n.regButton{\\r\\n    color: rgb(10, 3, 3);\\r\\n    background: rgb(255, 222, 73);\\r\\n    border-color: black;\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    /* margin-left: 0px; */\\r\\n    margin-top: 20px ;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.post-email{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.code{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: -10px;\\r\\n}\\r\\n\\r\\n.post-pass{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: -10px;\\r\\n}\\r\\n\\r\\n.post-reppas{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: -10px;\\r\\n}\\r\\n\\r\\n.outer{\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.inner{\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 5%;\\r\\n    margin-bottom: auto;\\r\\n}\\r\\n\\r\\n/* only dashes '-' (not underscores '_') are allowed in css selector`s names */\\r\\n\\r\\n.container_with_borders{\\r\\n    border: 3 px;\\r\\n    border-color: rgb(46, 45, 45);\\r\\n    border-style: solid;  \\r\\n    border-radius: 20px;    \\r\\n    width: 300px;\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    background-color: rgb(46, 45, 45);\\r\\n    margin-bottom:10px; \\r\\n    /* background-image: url(assets/images/nebo.jpg);*/\\r\\n    box-shadow:  6px 3px 33px 0px rgba(0,0,0,0.31);\\r\\n}\\r\\n\\r\\n.ui-inputgroup{\\r\\n    display: block;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n/* use dashes to separate subnames from each other */\\r\\n\\r\\n.buttonCBContainer{\\r\\n    display: block;\\r\\n    left: 50%\\r\\n}\\r\\n\\r\\n \\r\\n    \"","module.exports = \"<div class=\\\"outer\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n        <img src=\\\"assets/images/Logo-Sayme.svg\\\" style=\\\"width:280px; display: block; margin-left: auto;margin-right: auto\\\">\\r\\n    </div>\\r\\n    <div class=\\\"inner\\\">\\r\\n        <div class=\\\"container_with_borders\\\">\\r\\n            <form #postForm=\\\"ngForm\\\" (keydown.enter)=\\\"onRegister()\\\">\\r\\n                <div class=\\\"ui-g ui-fluid\\\" style=\\\"justify-content: center\\\">\\r\\n                    \\r\\n                    <div  style=\\\"padding: 0px;\\\" class=\\\"ui-g-12\\\">\\r\\n                        <input [(ngModel)]=\\\"newUser.login\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"text\\\" pInputText placeholder=\\\"Username\\\" autocomplete=\\\"off\\\">\\r\\n                        <br>\\r\\n                        <input [(ngModel)]=\\\"newUser.mail\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"text\\\" pInputText placeholder=\\\"Email\\\" autocomplete=\\\"off\\\">\\r\\n                        <br>\\r\\n                        <input [(ngModel)]=\\\"newUser.password\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"password\\\" pInputText placeholder=\\\"Password\\\"\\r\\n                            autocomplete=\\\"off\\\">\\r\\n                        <br>\\r\\n                        <input [(ngModel)]=\\\"repPassword\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"password\\\" pInputText placeholder=\\\"Repeat password\\\"\\r\\n                            autocomplete=\\\"off\\\">\\r\\n                        <br>\\r\\n                        <ng-template #set>\\r\\n                                <button class=\\\"regButton\\\"  style=\\\"padding:4%;vertical-align:middle; margin-top: 20px; width: 120px;height: 40px; border-radius: 30px;margin-left: 45px;\\\"\\r\\n                                pButton (click)=\\\"onRegister()\\\">Get code</button>\\r\\n                        </ng-template>\\r\\n\\r\\n                        \\r\\n\\r\\n                            <ng-template #unset>\\r\\n                                    <input [(ngModel)]=\\\"enteredCode\\\" class=\\\"post-username\\\" style=\\\"margin-left: auto;margin-right: auto\\\" name=\\\"code\\\" type=\\\"text\\\" pInputText\\r\\n                                        placeholder=\\\"Enter code we`ve sent on your mail\\\" autocomplete=\\\"off\\\">\\r\\n                                    <button pButton type=\\\"button\\\" class=\\\"regButton\\\" pButton (click)=\\\"onConfirmCode()\\\"  style=\\\"padding:4%; margin-top: 20px; width: 150px;height: 40px;display: block; border-radius: 30px;margin-left: 30px;\\\">Confirm code</button>\\r\\n                                </ng-template>\\r\\n                                \\r\\n                    <div *ngIf=\\\"!isVisibleCodeInput; then set else unset\\\" ></div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <p style=' font-family:Roboto, sans-serif;text-align: center; text-decoration: underline ;text-decoration-color: red ;color:black'>{{errorMessage}}</p>\\r\\n    </div>\\r\\n\\r\\n \"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { FeedbackService } from '../services/feedback.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { User } from '../Models/user';\r\nimport { timer } from '../../../node_modules/rxjs/internal/observable/timer';\r\nimport { Email } from '../Models/email';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css'],\r\n  providers: [UserService, FeedbackService, NGXLogger]\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  private usersToSearch = [];\r\n  private newUser = new User();\r\n  private repPassword: string;\r\n  private enteredCode: string;\r\n  private generatedCode: number;\r\n  private errorMessage = '';\r\n  private sendTo: Email;\r\n  isVisibleCodeInput = false;\r\n  private timeIt = timer(1, 10000);\r\n\r\n  constructor(private userService: UserService, private feedbackService: FeedbackService, private router: Router, private route: ActivatedRoute, private logger: NGXLogger) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegister() {\r\n    if (this.newUser.password && this.newUser.login && this.newUser.mail && this.repPassword) {\r\n      this.usersToSearch.forEach(element => {\r\n        if (element.mail === this.newUser.mail || element.login === this.newUser.login) {\r\n          this.newUser.id = element.id;\r\n        }\r\n      });\r\n\r\n      if (!this.newUser.id) {\r\n        if (this.isEmail(this.newUser.mail)) {\r\n          if ((this.newUser.password.length >= 7 &&this.newUser.password.length<=18)|| (this.newUser.login.length >= 5&&this.newUser.login.length<=18)) {\r\n            if (this.newUser.password === this.repPassword) {\r\n              this.generatedCode = this.randomInt(100000, 999999);\r\n              this.newUser.register_code = String(this.generatedCode);\r\n              this.errorMessage = '';\r\n              this.newUser.active = true;\r\n              this.newUser.bio = '';\r\n              this.sendTo = new Email(this.newUser.mail, this.newUser.register_code);\r\n              this.feedbackService.sendCode(this.sendTo)\r\n                .subscribe();\r\n              this.logger.debug('code for registration has been sent');\r\n              this.isVisibleCodeInput = true;\r\n            }\r\n            else { \r\n              this.errorMessage = 'Your password and repeated password don`t match! Try again.';\r\n              this.logger.info('not matching password and repeated password');\r\n            }\r\n          }\r\n          else {\r\n            this.errorMessage = 'Wrong length of password or login';\r\n            this.logger.info('Wrong length of password or login');\r\n\r\n          }\r\n        }\r\n        else {\r\n          this.errorMessage = 'Please enter the email in the correct format';\r\n          this.logger.info('Not passed email validation');\r\n        }\r\n      }\r\n      else {\r\n        this.errorMessage = 'We already have user with this email or login! Try again.';\r\n        this.logger.info('existing user or email while registering');\r\n      }\r\n    }\r\n    else {\r\n      this.errorMessage = 'Wrong input!';\r\n      this.logger.info('Some of the fields are empty');\r\n    }\r\n  }\r\n\r\n\r\n  onConfirmCode() {\r\n    if (this.enteredCode) {\r\n      if (this.enteredCode === this.newUser.register_code) {\r\n        this.logger.debug('sent and entered codes are equal');\r\n        this.userService.createUser(this.newUser)\r\n          .subscribe((data: User) => this.usersToSearch.push(data));\r\n        this.logger.info('new user created');\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.errorMessage = 'Entered code and sent code don`t match! Try again';\r\n        this.logger.info('sent and entered codes are different')\r\n      }\r\n    }\r\n    else {\r\n      this.errorMessage = 'Wrong input!';\r\n      this.logger.warn('Some of the fields are empty');\r\n    }\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService.getUsers()\r\n      .subscribe((data: User[]) => this.usersToSearch = data);\r\n  }\r\n\r\n  randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  isEmail(search: string): boolean {\r\n    var serchfind: boolean;\r\n    var regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    serchfind = regexp.test(search);\r\n    return serchfind\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Email } from '../Models/email';\r\nimport { NGXLogger } from 'ngx-logger';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n\r\n  private _url: string = 'api/feedback'\r\n  private urlCode='api/feedback/sendcode';\r\n\r\n  constructor(private http: HttpClient, private logger: NGXLogger) { }\r\n\r\n  sendFeedback(feedback: Email) {\r\n    this.logger.debug('sending feedback from service');\r\n    return this.http.post(this._url, feedback);\r\n  }\r\n\r\n  sendCode(email:Email){\r\n    this.logger.debug('sending code in service');\r\n    return this.http.post(this.urlCode, email);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpResponse } from '@angular/common/http';\r\nimport { Login } from '../Models/login';\r\nimport { Observable, of } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private http: HttpClient,private cookieService: CookieService,private router: Router, private route: ActivatedRoute) { }\r\n  private url='/api/account';\r\n  private url1='/api/account/authenticate';\r\n\r\n  // GET\r\n  getResponce(): Observable<HttpResponse<Login>> {\r\n  return this.http.get<Login>(\r\n    this.url, { observe: 'response' });\r\n  }\r\n\r\n\r\n  postLogin(){\r\n    return this.http.post(this.url1,'').subscribe(()=>{},error=>console.log(error));\r\n  }\r\n\r\n  // POST\r\n  postLoginUser(login: Login) {\r\n    return this.http.post(this.url, login);\r\n  }\r\n\r\n  getToken(): string {\r\n    return localStorage.getItem('token');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\nimport { Post } from '../Models/post';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { NGXLogger } from 'ngx-logger';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n\r\n  private url = '/api/post';\r\n\r\n  constructor( private http: HttpClient, private logger: NGXLogger) { }\r\n\r\n\r\n  // GET\r\n  getPosts() {\r\n    this.logger.debug('getting posts from service');\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getUserPosts(id) {\r\n    return this.http.get(this.url + \"/\" + id.toString());\r\n  }\r\n\r\n  // POST\r\n  createPost(post: Post) {\r\n    this.logger.debug('creating posts from service');\r\n    return this.http.post(this.url, post);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslateService {\r\n\r\n  data: any = {};\r\n  constructor(private http: HttpClient) { }\r\n\r\n  use(lang: string): Promise<{}> {\r\n    return new Promise<{}>((resolve, reject) => {\r\n      const langPath = `assets/i18n/${lang || 'en'}.json`;\r\n      this.http.get<{}>(langPath).subscribe(\r\n        translation => {\r\n          this.data = Object.assign({}, translation || {});\r\n          resolve(this.data);\r\n        },\r\n        error => {\r\n          this.data = {};\r\n          resolve(this.data);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams, HttpRequest, HttpEvent} from '@angular/common/http';\r\nimport { User } from '../Models/user';\r\nimport { Observable } from 'rxjs';\r\nimport { NGXLogger } from 'ngx-logger';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private url = '/api/user';\r\n\r\n  constructor(private http: HttpClient, private logger: NGXLogger) { }\r\n\r\n\r\n  getUsers() {\r\n    this.logger.debug('get users from service');\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getUser(id: number) {\r\n    return this.http.get(this.url + '/' + id.toString());\r\n  }\r\n\r\n  createUser(user: User) {\r\n    this.logger.debug('create user from service');\r\n    return this.http.post(this.url, user);\r\n  }\r\n\r\n  updateUser(user: User){\r\n    return this.http.put(this.url + '/' + user.id.toString(), user);\r\n  }\r\n\r\n  updateAvatar(id_user: number, file: File) {\r\n\r\n    let formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    return this.http.put(this.url + '/' + id_user.toString(), formData);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from './services/translate.service';\r\n\r\n@Pipe({\r\n  name: 'translate',\r\n  pure: false\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translate: TranslateService){}\r\n\r\n  transform(key: any): any {\r\n    return this.translate.data[key] || key;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n   <!--Here are user image and its names -->\\r\\n   <div>\\r\\n      <div>\\r\\n         <img src=\\\"\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n      <div>\\r\\n        <p>{{ 'Username' | translate }}</p>\\r\\n        <p>user_nickname</p>\\r\\n      </div>\\r\\n   </div>\\r\\n   <!--Here is a box with user bio-->\\r\\n   <div>\\r\\n      <div>\\r\\n         <p>Some info about this user...</p>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-user-body',\r\n  templateUrl: './about-user-body.component.html',\r\n  styleUrls: ['./about-user-body.component.css']\r\n})\r\nexport class AboutUserBodyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center; bottom: 10px;\\\">\\r\\n  <p>2018 SayMe Corp.</p> \\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".title{\\r\\n    font-size: 36px;\\r\\n    padding-top: 10px;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div id = \\\"wrap\\\">\\r\\n  <header>\\r\\n    <div class = \\\"title\\\">Sayme</div>\\r\\n  </header>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-registration-header',\r\n  templateUrl: './login-registration-header.component.html',\r\n  styleUrls: ['./login-registration-header.component.css']\r\n})\r\nexport class LoginRegistrationHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"p{\\r\\n    color: #cccccc;\\r\\n}\\r\\n\\r\\na{\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.search-input{\\r\\n    width: 100px;\\r\\n    margin-right: 10px; \\r\\n    padding: 5px 0;\\r\\n    padding-left: 10px; \\r\\n    border:rgb(0, 0, 0) solid 1px; \\r\\n    border-radius: 20px;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.search-input:focus{\\r\\n    width: 200px;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.wrapper-body{\\r\\n    min-width: 900px;\\r\\n    max-width: 900px;\\r\\n}\\r\\n\\r\\n.feedback-text{\\r\\n    font-size: 12px;\\r\\n    width: 320px;\\r\\n    height: 150px;\\r\\n    resize: none; \\r\\n    border: rgb(201, 201, 38) solid 1px;\\r\\n    border-radius: 10px;\\r\\n    outline: none;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.feedback-email{\\r\\n    font-size: 12px;\\r\\n    margin-bottom: 15px;\\r\\n    border: rgb(201, 201, 38) solid 1px;\\r\\n    border-radius: 10px;\\r\\n    padding: 10px;\\r\\n    outline: none;\\r\\n    width: 320px;\\r\\n}\\r\\n\\r\\n.feedback-email:focus, .feedback-text:focus{\\r\\n    box-shadow: inset 0 0 8px gold;\\r\\n}\\r\\n\\r\\n.feedback-send-button{\\r\\n    border-radius: 5px;\\r\\n    background: gold;\\r\\n    margin-right: 10px; \\r\\n    height: 30px;\\r\\n    border: 1px solid gold;\\r\\n}\\r\\n\\r\\n.feedback-send-button:hover{\\r\\n    background: rgb(192, 164, 6);\\r\\n}\\r\\n\\r\\n.feedback-cancel-button{\\r\\n    border-radius: 5px;\\r\\n    background: #eeeeee;\\r\\n    height: 30px;\\r\\n    border: 1px solid #eeeeee;\\r\\n}\\r\\n\\r\\n.feedback-cancel-button:hover{\\r\\n    background: #555555;\\r\\n}\\r\\n\\r\\n.sticky {\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n<img src=\\\"assets/images/Logo-Sayme.svg\\\" style= \\\"width:280px\\\">\\r\\n\\r\\n\\r\\n<div class=\\\"sticky\\\">\\r\\n<p-menubar [model]=\\\"items\\\" styleClass=\\\"menu\\\">\\r\\n    <input type=\\\"search\\\" class=\\\"search-input\\\" style=\\\"font-size: 15px; background: rgb(255, 236, 153);\\\" pInputText placeholder=\\\"{{ 'Search...'| translate }}\\\" >\\r\\n    <button type=\\\"button\\\" (click)=\\\"showDialog()\\\" pButton icon=\\\"fa fa-bug\\\"></button>\\r\\n</p-menubar>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Feedback modal form -->\\r\\n<p-dialog header=\\\"Feedback\\\" \\r\\n        [(visible)]=\\\"isFeedbackFormVisible\\\" \\r\\n        [resizable]='false' \\r\\n        [closeOnEscape]='true' \\r\\n        [dismissableMask]='true' \\r\\n        [draggable]='false' \\r\\n        [modal]=\\\"true\\\"            \\r\\n        [width]=\\\"350\\\" \\r\\n        [minWidth]=\\\"350\\\" \\r\\n        [maximizable]=\\\"true\\\">\\r\\n    <p style=\\\"margin: 0 0 17px 0;\\\">{{ 'Left your answer or comment here:' | translate }}</p>\\r\\n    <form #postForm=\\\"ngForm\\\" style=\\\"margin: 0;\\\">\\r\\n        <input pInputText required [(ngModel)]=\\\"useremail\\\" name=\\\"useremail\\\" type=\\\"email\\\" class=\\\"feedback-email\\\" placeholder=\\\"{{ 'your email'| translate }}\\\" autocomplete=\\\"off\\\">\\r\\n        <textarea required [(ngModel)]=\\\"feedbackText\\\" style=\\\"overflow:hidden;\\\" class=\\\"feedback-text\\\" name=\\\"feedbackText\\\" placeholder=\\\"{{ 'your comment' | translate }}\\\"></textarea>\\r\\n        <div style=\\\"float: right; margin-top: 5px;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"feedback-send-button\\\" (click)=\\\"onSendFeedback()\\\">{{ 'Send' | translate }}</button>\\r\\n            <button type=\\\"button\\\" class=\\\"feedback-cancel-button\\\" (click)=\\\"onCancelFeedBack()\\\">{{ 'Cancel' | translate }}</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</p-dialog>\\r\\n\\r\\n<!-- Successfuly sent feedback modal form -->\\r\\n<p-dialog header=\\\"Success!\\\" \\r\\n        [(visible)]=\\\"isSuccessFormVisible\\\" \\r\\n        [modal]=\\\"true\\\" \\r\\n        [resizable]='false' \\r\\n        [responsive]=\\\"true\\\" \\r\\n        [closeOnEscape]='true' \\r\\n        [dismissableMask]='true' \\r\\n        [draggable]='false' \\r\\n        [width]=\\\"350\\\" \\r\\n        [minWidth]=\\\"200\\\" \\r\\n        [minY]=\\\"70\\\"\\r\\n        [maximizable]=\\\"true\\\" \\r\\n        [baseZIndex]=\\\"10000\\\">\\r\\n    <p>{{ 'Report was successfuly sent!' | translate }}</p>\\r\\n    <div style=\\\"float: right;\\\">\\r\\n        <button type=\\\"button\\\" pButton (click)=\\\"isSuccessFormVisible=false\\\" label=\\\"OK\\\" class=\\\"ui-button-info\\\"></button>\\r\\n    </div>\\r\\n</p-dialog>\\r\\n\\r\\n<!-- Left slide sidebar -->\\r\\n<p-sidebar [(visible)]=\\\"opened\\\" id=\\\"sidebar\\\" [baseZIndex]=\\\"10000\\\" (onHide)=\\\"open();\\\" >\\r\\n    <h1>\\r\\n        <a routerLink=\\\" \\\" style=\\\"color: #cccccc;\\\">{{ 'Username' | translate }}</a>\\r\\n    </h1>\\r\\n    <h5>\\r\\n        <a routerLink=\\\" \\\" style=\\\"color: #cccccc;\\\">{{ 'Followers' | translate}}:</a>\\r\\n    </h5>\\r\\n    <h5>\\r\\n        <a routerLink=\\\" \\\" style=\\\"color: #cccccc;\\\">{{ 'Following' | translate}}:</a>\\r\\n    </h5>\\r\\n    <button pButton type=\\\"button\\\" class=\\\"ui-button-warning\\\" style=\\\"width: 200px; height: 30px; margin: 10px 0px;\\\">{{ 'Settings' | translate }}</button>\\r\\n    <br>\\r\\n    <button pButton type=\\\"button\\\" class=\\\"ui-button-danger\\\" style=\\\"width: 200px; height: 30px;\\\">{{ 'Log out' | translate }}</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <select name=\\\"language\\\" id=\\\"selectLanguage\\\" (change)=\\\"setLang($event.target.value);\\\">\\r\\n        <option value=\\\"en\\\" selected>{{ 'english' | translate }}</option>\\r\\n        <option value=\\\"ua\\\">{{ 'ukranian' | translate }}</option>\\r\\n        <option value=\\\"ru\\\">{{ 'russian' | translate }}</option>\\r\\n    </select>\\r\\n</p-sidebar>\\r\\n<router-outlet></router-outlet>\\r\\n</div>\"","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FeedbackService } from '../../services/feedback.service';\r\nimport { Email } from '../../Models/email';\r\nimport {LoginService} from'../../services/login.service';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { TranslateService } from '../../services/translate.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation-tools',\r\n  templateUrl: './navigation-tools.component.html',\r\n  styleUrls: ['./navigation-tools.component.css'],\r\n  providers: [FeedbackService, NGXLogger]\r\n})\r\nexport class NavigationToolsComponent implements OnInit {\r\n\r\n  items: MenuItem[];\r\n  opened: boolean = false;\r\n  isFeedbackFormVisible: boolean = false;\r\n  isSuccessFormVisible: boolean = false;\r\n  feedback = new Email('','')\r\n  feedbackText: string = ''\r\n  useremail: string = ''\r\n  language: string = '';\r\n\r\n\r\n  constructor(\r\n    private _feedbackService: FeedbackService,\r\n    private translate: TranslateService, \r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private logger: NGXLogger) { }\r\n\r\n  ngOnInit() {\r\n    this.selectLanguage();\r\n  }\r\n\r\n\r\n\r\n  //!!!FEATURE!!!\r\n  //switching on navigationbar button`s text \r\n  selectLanguage(){\r\n    var navigationItems = [];\r\n    switch (this.language) {\r\n      case 'ru':\r\n        navigationItems = ['Новости', 'Интересное', 'Сказать'];\r\n        break;\r\n      case 'ua':\r\n        navigationItems = ['Новини', 'Цікаве', 'Сказати'];\r\n        break;\r\n      default:\r\n        navigationItems = ['News', 'Intresting', 'Say'];\r\n        break;\r\n    }\r\n    this.items = [\r\n      {\r\n        label: ' ',\r\n        icon: 'fas fa-align-justify',\r\n        command: (onclick) => { this.open(); }\r\n      },\r\n      {\r\n        label: `${navigationItems[0]}`,\r\n        routerLink: 'post',\r\n      },\r\n      {\r\n        label: `${navigationItems[1]}`,\r\n        routerLink: 'interesting'\r\n      },\r\n      {\r\n        label: `${navigationItems[2]}`,\r\n        routerLink: '**'\r\n      }\r\n\r\n    ]\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    this.language = lang;\r\n    this.selectLanguage();\r\n    this.translate.use(lang);\r\n  }\r\n\r\n  ///opens sidebar with user info\r\n  open() {\r\n    this.opened = !this.opened;\r\n    return this.opened;\r\n  }\r\n\r\n  //shows feedback dialog\r\n  showDialog() {\r\n    this.isFeedbackFormVisible = true;\r\n  }\r\n  \r\n  //closes feedback dialog (info saves)\r\n  onCancelFeedBack() {\r\n    this.isFeedbackFormVisible = false;\r\n  }\r\n\r\n  //send feedback to server\r\n  onSendFeedback() {\r\n    if (this.feedbackText.length > 10 && this.useremail.length > 3 ) {\r\n      this.isFeedbackFormVisible = false\r\n      this.isSuccessFormVisible = true\r\n\r\n      this.feedback = new Email(this.useremail, this.feedbackText)\r\n      this._feedbackService.sendFeedback(this.feedback)\r\n          .subscribe()\r\n      this.logger.info('feedback was sent');\r\n      this.feedbackText = ''\r\n      this.useremail = ''\r\n    }\r\n    else this.logger.info('Wrong size of entered info in feedback');\r\n  }\r\n\r\n\r\n}","module.exports = \"input{\\r\\n    padding: 5px;\\r\\n    border-radius: 5px; \\r\\n    border: powderblue solid 1px;\\r\\n}\\r\\n\\r\\n.post-text{\\r\\n    resize: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.post-username{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: -10px;\\r\\n}\\r\\n\\r\\n.post-message{\\r\\n    outline: none;\\r\\n    border-radius: 40px;\\r\\n    margin-right: 20px;\\r\\n    background:  rgb(255, 236, 153);\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.post-message{\\r\\n    outline: none;\\r\\n    border-radius: 40px;\\r\\n    margin-right: 20px;\\r\\n    background:  rgb(255, 236, 153);\\r\\n    border: none;\\r\\n}\"","module.exports = \"<div class=\\\"outer\\\">\\r\\n    <div class=\\\"inner\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <form #postForm=\\\"ngForm\\\" (keydown.enter)=\\\"onSay()\\\">\\r\\n                <div class=\\\"ui-g ui-fluid\\\" >\\r\\n                    <div style=\\\"padding: 10px;\\\" class=\\\"ui-g-12\\\">\\r\\n                        <input [(ngModel)]=\\\"newPost.username\\\" class=\\\"post-username\\\" name=\\\"username\\\" type=\\\"text\\\" pInputText placeholder=\\\"{{ 'Username' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n                        <input [(ngModel)]=\\\"newPost.message\\\" class=\\\"post-message\\\" name=\\\"text\\\" type=\\\"text\\\" pInputText placeholder=\\\"{{ 'Say something...' | translate}}\\\" autocomplete=\\\"off\\\">\\r\\n                        <button style=\\\" width: 70px; border-radius: 50px;\\\" pButton (click)=\\\"onSay()\\\" icon=\\\"fa fa-comment\\\"></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <p-dataView [value]=\\\"posts.reverse()\\\">\\r\\n        <ng-template let-post pTemplate=\\\"listItem\\\">\\r\\n            <div class=\\\"ui-g\\\" style=\\\"padding: 0 10px; border-bottom: 1px solid #d9d9d9\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-12 post-container\\\">\\r\\n                    <div class=\\\"ui-g-12\\\">\\r\\n                        <p><b>{{post.username}}</b>:</p> \\r\\n                        <p><textarea class=\\\"post-text\\\" readonly style=\\\"color: black\\\">{{post.message}}</textarea></p>\\r\\n                        <p>{{post.post_date | date: 'dd/MM/yyyy HH:mm'}}</p> \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </p-dataView>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataViewModule } from 'primeng/dataview';\r\nimport { UserService } from '../../services/user.service';\r\nimport { User } from '../../Models/user';\r\nimport { PostService } from '../../services/post.service';\r\nimport { Post } from '../../Models/post';\r\nimport { timer } from 'rxjs/internal/observable/timer';\r\nimport { NGXLogger } from 'ngx-logger';\r\n\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css'],\r\n  providers: [PostService, UserService, NGXLogger]\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n  posts = [];\r\n  usersToSearch = [];\r\n  newPost = new Post();\r\n  newUser = new User();\r\n  maxUserId = 0;\r\n  timeIt = timer(1, 10000);\r\n\r\n  constructor(private postService: PostService, private userService: UserService, private logger: NGXLogger) { }\r\n\r\n  // При первом вызове компонента вызывается метод сервиса, который\r\n  // возвращает все посты, которые он нашел по АПИшке, и добавляет их\r\n  // в локальный массив, который в свою очередь общаеться с формой \r\n  // хтмл файла.\r\n  ngOnInit() {\r\n    this.timeIt.subscribe(x => this.loadPosts());\r\n  }\r\n\r\n  // добавляет новый пост в список постов\r\n  onSay() {\r\n    if (this.newPost.username.length > 2 &&\r\n        this.newPost.username.length <= 16 && \r\n        this.newPost.message.length <= 256 &&\r\n        this.newPost.message.length > 0 ) {\r\n      this.usersToSearch.forEach(element => {\r\n        if (element.login == this.newPost.username) {\r\n          this.newPost.id_user = element.id;\r\n        }\r\n      });\r\n\r\n      if (!this.newPost.id_user) {\r\n        this.logger.debug('There are no user with entered login. Creating new user')\r\n        this.newUser.login = this.newPost.username;\r\n        this.newUser.mail = ' ';\r\n        this.newUser.password = ' ';\r\n        this.newUser.bio = ' ';\r\n        this.newUser.register_code='';\r\n        this.newUser.active = true;\r\n        this.userService.createUser(this.newUser).\r\n          subscribe((data: User) => this.usersToSearch.push(data));\r\n          this.logger.debug('new user created');\r\n        this.usersToSearch.forEach(element => {\r\n          if (element.id > this.maxUserId) {\r\n            this.maxUserId = element.id;\r\n          }\r\n        });\r\n\r\n        this.newPost.id_user = this.maxUserId + 1;\r\n      }\r\n      else this.logger.debug('user with this login exist');\r\n      this.loadPosts();\r\n\r\n    this.newPost.post_date = new Date();\r\n    this.postService.createPost(this.newPost)\r\n        .subscribe((data: Post) => this.posts.push(data));\r\n\r\n    this.logger.info('Added new post');\r\n      this.newPost = new Post();\r\n      this.newUser = new User();\r\n    }\r\n  }\r\n\r\n  loadPosts() {\r\n    this.userService.getUsers()\r\n        .subscribe((data: User[]) => this.usersToSearch = data);\r\n    this.postService.getPosts()\r\n        .subscribe((data: Post[]) => this.posts = data);\r\n  } \r\n\r\n  getPostDate(date: Date) {\r\n   var yyyy = date.getFullYear().toString();\r\n   var mm = date.getMonth() < 9 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1).toString(); // getMonth() is zero-based\r\n   var dd  = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate().toString();\r\n   var hh = date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours().toString();\r\n   var min = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes().toString();\r\n   return \"\".concat(yyyy).concat(mm).concat(dd).concat(hh).concat(min);\r\n  }\r\n}\r\n\r\n","module.exports = \"p{\\r\\n    color: #cccccc;\\r\\n}\\r\\n\\r\\n\\r\\n.ui-button-text-icon-left .ui-button-text {\\r\\n    padding: .25em 1em .25em 1em;\\r\\n}\\r\\n\\r\\n\\r\\n#userimage{\\r\\n    width: 30%;\\r\\n    height: 30%; \\r\\n    margin: 0 auto; \\r\\n    float: left;\\r\\n    margin: 2%;\\r\\n}\\r\\n\\r\\n\\r\\ninput{\\r\\n    padding: 5px;\\r\\n    border-radius: 5px; \\r\\n    border: powderblue solid 1px;\\r\\n}\\r\\n\\r\\n\\r\\n.post-text{\\r\\n    resize: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    box-sizing:border-box;\\r\\n    outline: none; \\r\\n}\\r\\n\\r\\n\\r\\n.bio{\\r\\n    word-wrap: break-word;\\r\\n    font-family: Roboto, sans-serif;\\r\\n}\\r\\n\\r\\n\\r\\n.userinfo{\\r\\n    display: block;\\r\\n    height: 220px;\\r\\n}\\r\\n\\r\\n\\r\\n.sub{\\r\\n    float: right\\r\\n}\\r\\n\\r\\n\\r\\n.post-username{\\r\\n    outline: none; \\r\\n    border-radius: 40px; \\r\\n    margin: 0 20px; \\r\\n    margin-left: -10px;\\r\\n}\\r\\n\\r\\n\\r\\n.post-message{\\r\\n    outline: none;\\r\\n    border-radius: 40px;\\r\\n    margin-right: 20px;\\r\\n    background:  rgb(255, 236, 153);\\r\\n    border: none;\\r\\n}\"","module.exports = \"<div class=\\\"outer\\\">\\r\\n  <div class=\\\"userinfo\\\">\\r\\n      <br>\\r\\n          <div style= \\\"float:left; padding-right:3%\\\">\\r\\n                <img id=\\\"image\\\" [src]=\\\"imageData\\\" style=\\\" width:240px;\\\">\\r\\n          </div>\\r\\n          <div>\\r\\n              <div style=\\\"padding: 10px;\\\">\\r\\n                    <h2 style=\\\"display: inline;\\\">{{user.login}}</h2> \\r\\n                    <p-button (click)=\\\"showProfileSettings()\\\" icon=\\\"fas fa-cog\\\" style=\\\"float:right\\\"></p-button>\\r\\n              </div>\\r\\n              <br>\\r\\n              <h4 class=\\\"bio\\\">About: {{user.bio}}</h4>\\r\\n          </div>\\r\\n  </div>\\r\\n  \\r\\n  <form #postForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"ui-g ui-fluid\\\" >\\r\\n        <div style=\\\"padding: 10px;\\\" class=\\\"ui-g-12\\\">\\r\\n              <input [(ngModel)]=\\\"newPost.message\\\" class=\\\"post-message\\\" name=\\\"text\\\" type=\\\"text\\\" pInputText placeholder=\\\"Say something...\\\" autocomplete=\\\"off\\\" style=\\\"width: 35%;\\\">\\r\\n          <p-button (click)=\\\"onSay()\\\" icon=\\\"fa fa-comment\\\" style=\\\"width:70px;\\\"></p-button>\\r\\n          <p-button label=\\\"Submit\\\" class=\\\"sub\\\"></p-button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <p-dataView [value]=\\\"posts.reverse()\\\">\\r\\n      <ng-template let-post pTemplate=\\\"listItem\\\">\\r\\n          <div class=\\\"ui-g\\\" style=\\\"padding: 0 10px; border-bottom: 1px solid #d9d9d9\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-12 post-container\\\">\\r\\n                  <div class=\\\"ui-g-12\\\">\\r\\n                      <p><textarea class=\\\"post-text\\\" readonly style=\\\"color: black\\\">{{post.message}}</textarea></p>\\r\\n                      <p style=\\\"color: black\\\">{{post.post_date | date: 'dd/MM/yyyy HH:mm'}}</p> \\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </ng-template>\\r\\n  </p-dataView>\\r\\n</div>\\r\\n\\r\\n<p-dialog header=\\\"Profile settings\\\" [(visible)]=\\\"displayProfileSettings\\\" [width]=\\\"600\\\" [draggable]=\\\"false\\\" \\r\\n[dismissableMask]=\\\"true\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [resizable]=\\\"false\\\">\\r\\n    <p>Avatar:</p>\\r\\n    <p-fileUpload #form name=\\\"myfile[]\\\" customUpload=\\\"true\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"\\r\\n     (uploadHandler)=\\\"myUploader($event, form)\\\" showCancelButton=\\\"false\\\"></p-fileUpload>\\r\\n    <p>About:</p>\\r\\n    <p><textarea rows=\\\"4\\\" maxlength=\\\"256\\\" class=\\\"post-text\\\" style=\\\"color: black;\\\">{{user.bio}}</textarea></p>\\r\\n</p-dialog>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { PostService } from '../services/post.service';\r\nimport { Post } from '../Models/post';\r\nimport { User } from '../Models/user';\r\n\r\n@Component({\r\n  selector: 'app-userpage',\r\n  templateUrl: './userpage.component.html',\r\n  styleUrls: ['./userpage.component.css'],\r\n  providers: [PostService, UserService]\r\n})\r\nexport class UserpageComponent implements OnInit {\r\n\r\n  posts = [];\r\n  imageData;\r\n  user = new User();\r\n  userToChange = new User();\r\n  newPost = new Post();\r\n  displayProfileSettings: boolean = false;\r\n\r\n  constructor(private postService: PostService, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadUserPosts();\r\n  }\r\n\r\n  loadUserPosts(){\r\n      this.userService.getUser(32)\r\n    .subscribe((data: User) => {\r\n      this.user = data;\r\n\r\n      this.getPostsFromService(data);\r\n      this.imageData = 'data:image/jpg;base64,' + data.avatar;\r\n    }, err => console.error(err));\r\n  }\r\n  getPostsFromService(user: User){\r\n        this.postService.getUserPosts(user.id)\r\n      .subscribe((data: Post[]) => this.posts = data);\r\n  }\r\n\r\n  // добавляет новый пост в список постов\r\n  onSay() {\r\n    if (this.newPost.message.length <= 256 &&\r\n        this.newPost.message.length > 0 ) {\r\n\r\n    this.newPost.id_user = this.user.id;\r\n    this.newPost.username = this.user.login;\r\n    this.newPost.post_date = new Date();\r\n    this.postService.createPost(this.newPost)\r\n    .subscribe((data: Post) => this.posts.push(data));\r\n      this.newPost = new Post();\r\n    }\r\n  }\r\n\r\n  // Открыть диалог настройки аккаунта\r\n  showProfileSettings() {\r\n    this.displayProfileSettings = !this.displayProfileSettings;\r\n  }\r\n\r\n  myUploader(event, form){\r\n    \r\n\r\n    let file: File = event.files[0];\r\n    console.log(\"file:\", file)\r\n\r\n    this.userService.updateAvatar(this.user.id ,file)\r\n    .subscribe(() => (this.convertToBase64(file)),(err) => console.error(err));\r\n\r\n    form.clear();\r\n  }\r\n\r\n  convertToBase64(file){\r\n    let that = this;\r\n\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file); \r\n    reader.onloadend = function() {\r\n      that.imageData = reader.result.toString();\r\n      that.imageData = that.imageData.replace(/^data:image\\/[a-z]+;base64,/, \"\");\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from 'app/app.module';\r\nimport { environment } from 'environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}